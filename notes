helperScript.makeAllCreepsSayRole();
helperScript.makeAllCreepsSayRole('builder');

helperScript.manualSpawnCreep('E17S13', 'builder', [WORK, CARRY, MOVE, MOVE]);
helperScript.manualSpawnCreep('E17S13', 'defender', null, { rallyPointName: "RallyPoint" });

helperScript.getCreepsInRoom('W8N3');
helperScript.assignCreepToRoom('CreepName', 'W7N3');

//Spawn Claimer
Game.spawns['spawnName'].spawnCreep([CLAIM, MOVE], 'Claimer1', { memory: { role: 'claimer', targetRoom: 'roomName' } });

//Change Role of a Creep
helperScript.changeRole(Game.creeps['CreepName'], 'newRole');

// Change Build Priority for a Room
helperScript.changeBuildPriority('roomName', [
    STRUCTURE_SPAWN, STRUCTURE_EXTENSION, STRUCTURE_ROAD, STRUCTURE_WALL, STRUCTURE_RAMPART,
    STRUCTURE_KEEPER_LAIR, STRUCTURE_PORTAL, STRUCTURE_CONTROLLER, STRUCTURE_LINK,
    STRUCTURE_STORAGE, STRUCTURE_TOWER, STRUCTURE_OBSERVER, STRUCTURE_POWER_BANK,
    STRUCTURE_POWER_SPAWN, STRUCTURE_EXTRACTOR, STRUCTURE_LAB, STRUCTURE_TERMINAL,
    STRUCTURE_CONTAINER, STRUCTURE_NUKER, STRUCTURE_FACTORY
]);

// Change Spawn Priority for a Room
helperScript.changeSpawnPriority('roomName', [ "dropper","picker","dropper","picker","dropper","dropper","builder","upgrader","builder","upgrader","builder","upgrader","builder","upgrader","builder","upgrader" ]);

// Change Options for a Room
helperScript.changeOptions('roomName', {
    towerAttack: true, towerHeal: true, towerRepair: true
});

// Change Repair Priority for a Room
helperScript.changeRepairPriority('roomName', [
    STRUCTURE_SPAWN, STRUCTURE_EXTENSION, STRUCTURE_ROAD, STRUCTURE_WALL, STRUCTURE_RAMPART,
    STRUCTURE_KEEPER_LAIR, STRUCTURE_PORTAL, STRUCTURE_CONTROLLER, STRUCTURE_LINK,
    STRUCTURE_STORAGE, STRUCTURE_TOWER, STRUCTURE_OBSERVER, STRUCTURE_POWER_BANK,
    STRUCTURE_POWER_SPAWN, STRUCTURE_EXTRACTOR, STRUCTURE_LAB, STRUCTURE_TERMINAL,
    STRUCTURE_CONTAINER, STRUCTURE_NUKER, STRUCTURE_FACTORY
]);

// Change Repair Thresholds for a Room
helperScript.changeRepairThresholds('E17S13', {
    [STRUCTURE_ROAD]: 0.7,
    [STRUCTURE_CONTAINER]: 0.8,
    [STRUCTURE_WALL]: 0.00033,
    [STRUCTURE_RAMPART]: 0.008,
    [STRUCTURE_SPAWN]: 0.9,
    [STRUCTURE_EXTENSION]: 0.9,
    [STRUCTURE_LINK]: 0.9,
    [STRUCTURE_STORAGE]: 0.9,
    [STRUCTURE_TOWER]: 0.9,
    [STRUCTURE_OBSERVER]: 0.9,
    [STRUCTURE_POWER_SPAWN]: 0.9,
    [STRUCTURE_EXTRACTOR]: 0.9,
    [STRUCTURE_LAB]: 0.9,
    [STRUCTURE_TERMINAL]: 0.9,
    [STRUCTURE_NUKER]: 0.9,
    [STRUCTURE_FACTORY]: 0.9
});

// Change Max Repair for a Room
helperScript.changeMaxRepair('E17S13', {
    [STRUCTURE_ROAD]: 1,
    [STRUCTURE_CONTAINER]: 1,
    [STRUCTURE_WALL]: 0.00033,
    [STRUCTURE_RAMPART]: 0.013,
    [STRUCTURE_SPAWN]: 1.0,
    [STRUCTURE_EXTENSION]: 1.0,
    [STRUCTURE_LINK]: 1.0,
    [STRUCTURE_STORAGE]: 1.0,
    [STRUCTURE_TOWER]: 1.0,
    [STRUCTURE_OBSERVER]: 1.0,
    [STRUCTURE_POWER_SPAWN]: 1.0,
    [STRUCTURE_EXTRACTOR]: 1.0,
    [STRUCTURE_LAB]: 1.0,
    [STRUCTURE_TERMINAL]: 1.0,
    [STRUCTURE_NUKER]: 1.0,
    [STRUCTURE_FACTORY]: 1.0
});

// Change Fill Priority for a Room
helperScript.changeFillPriority('E17S13', [
    STRUCTURE_EXTENSION, STRUCTURE_SPAWN, STRUCTURE_TOWER, STRUCTURE_CONTAINER,
    STRUCTURE_STORAGE, STRUCTURE_LAB, STRUCTURE_TERMINAL, STRUCTURE_NUKER, STRUCTURE_FACTORY
]);

// Change Energy Threshold for a Room
helperScript.changeEnergyThreshold('roomName', 0.1);





// Change Build Priority of every builder creep in a given room
helperScript.changeAllBuildersBuildPriority('E17S13', [
    STRUCTURE_SPAWN, STRUCTURE_EXTENSION, STRUCTURE_ROAD, STRUCTURE_WALL, STRUCTURE_RAMPART,
    STRUCTURE_KEEPER_LAIR, STRUCTURE_PORTAL, STRUCTURE_CONTROLLER, STRUCTURE_LINK,
    STRUCTURE_STORAGE, STRUCTURE_TOWER, STRUCTURE_OBSERVER, STRUCTURE_POWER_BANK,
    STRUCTURE_POWER_SPAWN, STRUCTURE_EXTRACTOR, STRUCTURE_LAB, STRUCTURE_TERMINAL,
    STRUCTURE_CONTAINER, STRUCTURE_NUKER, STRUCTURE_FACTORY
]);

// Change Build Priority of a single builder creep in a given room
helperScript.changeBuilderBuildPriority('builderCreepName', [
    STRUCTURE_SPAWN, STRUCTURE_EXTENSION, STRUCTURE_ROAD, STRUCTURE_WALL, STRUCTURE_RAMPART,
    STRUCTURE_KEEPER_LAIR, STRUCTURE_PORTAL, STRUCTURE_CONTROLLER, STRUCTURE_LINK,
    STRUCTURE_STORAGE, STRUCTURE_TOWER, STRUCTURE_OBSERVER, STRUCTURE_POWER_BANK,
    STRUCTURE_POWER_SPAWN, STRUCTURE_EXTRACTOR, STRUCTURE_LAB, STRUCTURE_TERMINAL,
    STRUCTURE_CONTAINER, STRUCTURE_NUKER, STRUCTURE_FACTORY
]);

// Change Repair Priority of every builder creep in a given room
helperScript.changeAllBuildersRepairPriority('roomName', [
    STRUCTURE_SPAWN, STRUCTURE_EXTENSION, STRUCTURE_ROAD, STRUCTURE_WALL, STRUCTURE_RAMPART,
    STRUCTURE_KEEPER_LAIR, STRUCTURE_PORTAL, STRUCTURE_CONTROLLER, STRUCTURE_LINK,
    STRUCTURE_STORAGE, STRUCTURE_TOWER, STRUCTURE_OBSERVER, STRUCTURE_POWER_BANK,
    STRUCTURE_POWER_SPAWN, STRUCTURE_EXTRACTOR, STRUCTURE_LAB, STRUCTURE_TERMINAL,
    STRUCTURE_CONTAINER, STRUCTURE_NUKER, STRUCTURE_FACTORY
]);

// Change Repair Priority of a single builder creep in a given room
helperScript.changeBuilderRepairPriority('builderCreepName', [
    STRUCTURE_SPAWN, STRUCTURE_EXTENSION, STRUCTURE_ROAD, STRUCTURE_WALL, STRUCTURE_RAMPART,
    STRUCTURE_KEEPER_LAIR, STRUCTURE_PORTAL, STRUCTURE_CONTROLLER, STRUCTURE_LINK,
    STRUCTURE_STORAGE, STRUCTURE_TOWER, STRUCTURE_OBSERVER, STRUCTURE_POWER_BANK,
    STRUCTURE_POWER_SPAWN, STRUCTURE_EXTRACTOR, STRUCTURE_LAB, STRUCTURE_TERMINAL,
    STRUCTURE_CONTAINER, STRUCTURE_NUKER, STRUCTURE_FACTORY
]);

// Change prioritizeRepairing of every builder creep in a given room
helperScript.changeAllBuildersPrioritizeRepairing('roomName', true);

// Change prioritizeRepairing of a single builder creep in a given room
helperScript.changeBuilderPrioritizeRepairing('builderCreepName', true);

// Change Pickup Priority of every builder creep in a given room
helperScript.changeAllBuildersPickupPriority('roomName', [
    'dropped', 'container', 'storage'
]);

// Change Pickup Priority of a single builder creep in a given room
helperScript.changeBuilderPickupPriority('builderCreepName', [
    'dropped', 'container', 'storage'
]);

helperScript.changeAllPickersPickupPriority('roomName', ['dropped', 'container', 'storage']);
helperScript.changePickerPickupPriority('CreepName', ['dropped', 'container', 'storage']);
helperScript.changePickupThreshold('CreepName', {
    'dropped': 100, 'container': 100, 'storage': 100
});

helperScript.changeAllPickersPickupThreshold('roomName', {
    'dropped': 100, 'container': 100, 'storage': 100
});

helperScript.changeAllBuildersPickupPriority('roomName', ['dropped', 'container', 'storage']);
helperScript.changeAllBuildersPickupThreshold('roomName', {
    'dropped': 100, 'container': 100, 'storage': 100
});

helperScript.changeAllUpgradersPickupPriority('roomName', ['dropped', 'container', 'storage']);
helperScript.changeAllUpgradersPickupThreshold('roomName', {
    'dropped': 100, 'container': 100, 'storage': 100
});

Update Existing Room Memory
To update your existing rooms' memory with the new default values, use the following script in the Screeps console:

Object.keys(Game.rooms).forEach(roomName => {
    helperScript.initializeRoomMemory(roomName);
});

helperScript.changePickupOrder('PickerCreepName', 'minerals');
helperScript.changeAllPickersPickupOrder('W1N1', 'minerals');
helperScript.changeMineralPickupThreshold('PickerCreepName', { 'H': 50, 'O': 50 });
helperScript.changeAllPickersMineralPickupThreshold('W1N1', { 'H': 50, 'O': 50 });
helperScript.changeMineralPickupPriority('PickerCreepName', ['O', 'H', 'Z']);
helperScript.changeAllPickersMineralPickupPriority('W1N1', ['O', 'H', 'Z']);

helperScript.setCreepFlag('CreepName123', 'Flag1');
helperScript.setRoleFlag('attacker', 'Flag2');
helperScript.setRoleFlagInRoom('defender', 'W1N1', 'Flag3');

// Spawn a claimer in the home room and assign it to a target room
helperScript.spawnClaimer('HomeRoom', 'TargetRoom');

// Set or change the target room for an existing claimer
helperScript.setClaimerTargetRoom('claimer_12345678', 'NewTargetRoom');

// Spawn a pioneer in the home room and assign it to a target room
helperScript.spawnPioneer('HomeRoom', 'TargetRoom');


